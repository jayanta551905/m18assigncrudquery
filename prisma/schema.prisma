generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  firstName    String?   @db.VarChar(50)
  middleName   String?   @db.VarChar(50)
  lastName     String?   @db.VarChar(50)
  mobile       String?   @db.VarChar(15)
  email        String?   @db.VarChar(50)
  passwordHash String?   @db.VarChar(32)
  registeredAt DateTime? @default(now()) @db.Timestamp(0)
  lastLogin    DateTime? @default(now()) @db.Timestamp(0)
  intro        String?   @db.Text
  profile      String?   @db.Text
  createdAt    DateTime? @default(now()) @db.Timestamp(0)
  updatedAt    DateTime? @default(now()) @updatedAt @db.Timestamp(0)
  post         post[]
}

model post {
  id            BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  authorId      BigInt          @db.UnsignedBigInt
  parentId      BigInt?         @db.UnsignedBigInt
  title         String          @db.VarChar(75)
  metaTeitle    String?         @db.VarChar(100)
  slug          String?         @db.VarChar(100)
  summary       String?         @db.TinyText
  published     String?         @db.TinyText
  createdAt     DateTime        @default(now()) @db.Timestamp(0)
  updatedAt     DateTime        @default(now()) @updatedAt @db.Timestamp(0)
  publishedAt   DateTime        @default(now()) @db.Timestamp(0)
  content       String?         @db.Text
  user          user            @relation(fields: [authorId], references: [id], map: "FK_post_user")
  post_category post_category[]

  @@index([authorId], map: "FK_post_user")
}

model post_comment {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  postId      BigInt   @db.UnsignedBigInt
  parentId    BigInt   @db.UnsignedBigInt
  title       String   @db.VarChar(100)
  published   String?  @db.TinyText
  createdAt   DateTime @default(now()) @db.Timestamp(0)
  updatedAt   DateTime @default(now()) @updatedAt @db.Timestamp(0)
  publishedAt DateTime @default(now()) @db.Timestamp(0)
  content     String?  @db.Text
}

model category {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  parentId  BigInt   @db.UnsignedBigInt
  title     String   @db.VarChar(75)
  metaTitle String?  @db.VarChar(100)
  slug      String?  @db.VarChar(100)
  content   String?  @db.Text
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model post_category {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  postId     BigInt   @db.UnsignedBigInt
  catrgoryId BigInt   @db.UnsignedBigInt
  createdAt  DateTime @default(now()) @db.Timestamp(0)
  updatedAt  DateTime @default(now()) @updatedAt @db.Timestamp(0)
  post       post     @relation(fields: [postId], references: [id], map: "FK_post_category_post_id")

  @@index([postId], map: "FK_post_category_post_id")
}

model tag {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  title     String   @db.VarChar(75)
  metaTitle String?  @db.VarChar(100)
  slug      String?  @db.VarChar(100)
  content   String?  @db.Text
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model post_tag {
  id     BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  postId BigInt @db.UnsignedBigInt
  tagId  BigInt @db.UnsignedBigInt
}

model post_meta {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  postId    BigInt   @db.UnsignedBigInt
  key       String?  @db.VarChar(50)
  content   String?  @db.Text
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)
}
